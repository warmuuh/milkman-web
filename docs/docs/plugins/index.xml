<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Milkman Plugins on Milkman</title>
    <link>http://localhost:1313/docs/plugins/</link>
    <description>Recent content in Milkman Plugins on Milkman</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="http://localhost:1313/docs/plugins/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Milkman Auth Plugin</title>
      <link>http://localhost:1313/docs/plugins/authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/plugins/authentication/</guid>
      <description> Contains key-types for authentication, such as oauth-authentication&#xA;Features supports oauth2 password-grant, client-credential grant and authorization-code grant Screenshot Editing a secret oAuth Key (Password Grant). Remarks does not yet support specifying a redirect-url for authorization-code as there is currently no browser included. </description>
    </item>
    <item>
      <title>Milkman Cassandra Plugin</title>
      <link>http://localhost:1313/docs/plugins/cassandra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/plugins/cassandra/</guid>
      <description>Introduces Cql Requests to Milkman using cassandra datastax driver.&#xA;Requirements This plugin requires milkman-jdbc plugin&#xA;Installation After placing the jar into \plugin folder, you also have to place the driver-jars you want to use in that folder as well.&#xA;Usage The used url is of following format:&#xA;cql://host[/keyspace]?dc=...[&amp;amp;username=...&amp;amp;password=...] supported parameters&#xA;name description dc datacenter, required. for local installations, this should be &amp;lsquo;datacenter1&amp;rsquo; username username, optional password password, optional Screenshot Editing a secret oAuth Key (Password Grant).</description>
    </item>
    <item>
      <title>Milkman Commandline Interface</title>
      <link>http://localhost:1313/docs/plugins/cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/plugins/cli/</guid>
      <description>This is an experimental interactive command line interface for plugin. After copying the content of the archive to the root directory of milkman, you can start it by mm on terminal.&#xA;Screenshot Features Editing Request-Aspects via nano Executing requests Analyzing responses via less Interactive mode (entered by simply starting mm) or non-interactive mode (by executing commands via mm [command]) Tab-Completion on interactive mode Commands Note: all IDs are derived from the original names.</description>
    </item>
    <item>
      <title>Milkman Explore Plugin</title>
      <link>http://localhost:1313/docs/plugins/explore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/plugins/explore/</guid>
      <description> Extends Milkman-rest with an additional response-tab that allows for application/json responses to be explored using JMesPath.&#xA;Note requires milkman-rest plugin Screenshot Example of the explore plugin </description>
    </item>
    <item>
      <title>Milkman GraphQL Plugin</title>
      <link>http://localhost:1313/docs/plugins/graphql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/plugins/graphql/</guid>
      <description> Allows to craft GraphQL requests.&#xA;Note This plugin is rather simple and does not include advanced features such as auto-completion or schema-validation (yet). Requires milkman-rest plugin Screenshot Example of the GraphQl plugin </description>
    </item>
    <item>
      <title>Milkman Grpc Plugin</title>
      <link>http://localhost:1313/docs/plugins/grpc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/plugins/grpc/</guid>
      <description>Grpc Plugin for communication with Grpc Servers.&#xA;Features Can work with Server Reflection to query services and retrieve *.proto files Given a *.proto file, Server Reflection is not necessary to query a service Read/write ASCII headers Support Server/client/both streams Screenshot Example of the Grpc plugin Example of Server streaming Client Streaming To send multiple messages, just add multiple json objects to the payload, divided by two new lines.</description>
    </item>
    <item>
      <title>Milkman Http Plugin</title>
      <link>http://localhost:1313/docs/plugins/rest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/plugins/rest/</guid>
      <description>Introduces Http request capabilities to milkman. Consists of serveral features that together should make milkman be usable as postman-replacement for day-to-day work.&#xA;Screenshot Example of the Rest plugin Example of Server Sent Events Streaming Features Postman-like UI Crafting of requests by editing body, headers, parameters Highlighting/formatting for json Proxy-Authentication support (BASIC for now) Importers for Postman exports (Collections, Environments, Data-Dump) Importers for OpenApi v3.0 (planned) Exporters Support import of APIs listed at APIs.</description>
    </item>
    <item>
      <title>Milkman Nosql Plugin</title>
      <link>http://localhost:1313/docs/plugins/nosql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/plugins/nosql/</guid>
      <description>Introduces Nosql Requests to Milkman using JNoSql.&#xA;Installation After placing the jar into \plugin folder, you also have to place the driver-jars you want to use in that folder as well.&#xA;Screenshot TBD&#xA;Features Integration of jnosql query language support for key-value databases (e.g. dynamodb, redis, memcache,&amp;hellip;) support for document databases (e.g. couchbase, ) support for column databases (e.g. cassandra, ) (planned) support for graph databases (via Apache tinkerpop, supporting databases like neo4j) (planned) exploration of table structures / existing tables.</description>
    </item>
    <item>
      <title>Milkman Note Plugin</title>
      <link>http://localhost:1313/docs/plugins/note/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/plugins/note/</guid>
      <description> This is a very simple plugin that adds a tab to each request where users can enter some notes about the request.&#xA;This plugin serves demonstrational purposes and should show how milkman can be extended.&#xA;Screenshot Example of the Notes plugin </description>
    </item>
    <item>
      <title>Milkman Privatebin Plugin</title>
      <link>http://localhost:1313/docs/plugins/privatebin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/plugins/privatebin/</guid>
      <description> Allows to share requests etc via Privatebin.&#xA;Screenshot Example of the Privatebin plugin Features Customizable Privatebin installation Client-side AES encryption Share requests via simple URL Burn After Reading feature </description>
    </item>
    <item>
      <title>Milkman Scripting Plugin</title>
      <link>http://localhost:1313/docs/plugins/scripting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/plugins/scripting/</guid>
      <description>provides scripting capabilities via nashorn javascript engine (graal.js supported but disabled because it is too big in size).&#xA;Features Provides possibility to pre-load scripts from web, such as chai, via settings. Pre-Request script execution before actual request is made Post-Request script execution with logging output Extensions of template parameters with js: prefix For example, you can set BASIC authorization via header: Authorization: Basic {{js:base64(&amp;quot;username:password&amp;quot;)}} Example for scripts var url = JSON.</description>
    </item>
    <item>
      <title>Milkman Socket.IO Plugin</title>
      <link>http://localhost:1313/docs/plugins/sio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/plugins/sio/</guid>
      <description> Support for Socket.IO transport&#xA;Features supports Socket.IO Screenshot Example of the Socket.IO plugin Note requires milkman-rest plugin </description>
    </item>
    <item>
      <title>Milkman Jdbc Plugin</title>
      <link>http://localhost:1313/docs/plugins/jdbc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/plugins/jdbc/</guid>
      <description> Introduces Sql Requests to Milkman using JDBC.&#xA;Installation After placing the jar into \plugin folder, you also have to place the driver-jars you want to use in that folder as well.&#xA;Screenshot Example of the Sql plugin Features Execution of Requests against Jdbc compatible Databases. (planned) exploration of table structures / existing tables. </description>
    </item>
    <item>
      <title>Milkman Git Sync Plugin</title>
      <link>http://localhost:1313/docs/plugins/sync-git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/plugins/sync-git/</guid>
      <description> Support for Socket.IO transport&#xA;This plugin allows to setup a git repository to where a workspace can be synchronized. Synchronization works by computing the diffs and applying them in a fuzzy manner to the latest version (simple algorithm of Differential Synchronization).&#xA;Screenshot Example of the Scripting plugin Features synchronizes (on-demand for now) workspaces with a remote git repository Remark This feature is experimental. </description>
    </item>
    <item>
      <title>Milkman Test Plugin</title>
      <link>http://localhost:1313/docs/plugins/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/plugins/test/</guid>
      <description>a testrunner plugin that allows to execute multiple requests in a sequence and verify their results.&#xA;Usage Just Drag-and-drop requests you want to execute into the test-tab and you are ready to go.&#xA;Demo Environment On execution, a separate environment only for this test-run will be created, so everything written to the current environment. For differentiation in scripts, a __TEST__ = true variable is also added to the current environment.</description>
    </item>
    <item>
      <title>Milkman Websocket Plugin</title>
      <link>http://localhost:1313/docs/plugins/ws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/plugins/ws/</guid>
      <description> Support for websocket transport&#xA;Features supports ws and wss can interactively send messages Screenshot Note requires milkman-rest plugin </description>
    </item>
  </channel>
</rss>
